# Reentrenar el modelo y subir artifacts
name: Retrain Model

# Disparador
on:
  workflow_dispatch: # Permite lanzarlo manualmente

# Trabajos
jobs:
  retrain_and_upload:
    runs-on: ubuntu-latest
    # Permisos necesarios para disparar el siguiente workflow
    permissions:
      actions: write

    #Pasos
    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Instalar dependencias
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install .
      
      - name: Ejecutar reentrenamiento del modelo
        id: training_run
        run: |
          # Generamos un nombre único para el tag del modelo
          TIMESTAMP=$(date +%Y%m%dT%H%M%S)
          MODEL_TAG="retrain-${TIMESTAMP}"
          echo "Training new model with tag: ${MODEL_TAG}"
          
          # Ejecutamos el script de entrenamiento
          # Se usa PYTHONPATH para que Python encuentre el módulo mlops_housing
          PYTHONPATH=src python -m mlops_housing.train --tag ${MODEL_TAG}

          # Guardamos el nombre del artifact para usarlo luego
          echo "artifact_name=model-artifacts-${MODEL_TAG}" >> $GITHUB_OUTPUT

      - name: Subir artifacts del nuevo modelo
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.training_run.outputs.artifact_name }}
          path: artifacts/
          retention-days: 5 # Guardar el artifact por 5 días

      - name: Disparar workflow de Build and Push
        if: success() # Solo se ejecuta si los pasos anteriores fueron exitosos
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: "build_and_push.yml",
              ref: "${{ github.ref }}",
              inputs: {
                "artifact-name": "${{ steps.training_run.outputs.artifact_name }}"
              }
            })